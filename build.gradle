apply plugin: "java"

defaultTasks "clean", "all"

dependencies {
    compile fileTree(dir: "./lib", include: "*.jar");
    testCompile fileTree(dir: "./lib-test", include: "*.jar");
}

jar {
    doFirst {
        manifest {
            def cp = configurations.compile.collect { "lib/${it.name}" }.join(" ")
            attributes(
                "Main-Class": "ru.kuznetsov.druidsql.Main",
                "Class-Path": cp
            )
        }
    }
}

sourceSets {
    main {
        java {
            srcDir "src"
        }
    }
    test {
        java {
            srcDir "test"
        }
    }
}

task removeDist() << {
    def distDir = file("./dist")
    if (distDir.exists()) {
        distDir.deleteDir()
    }
}

task all() << {
    copy {
        from "build/libs/"
        into "./dist"
    }
    copy {
        from "lib/"
        into "./dist/lib"
    }
}

task run() << {
    exec {
        workingDir "./dist"
        commandLine "sh", "-c", "java -Xmx256m -jar DruidSql.jar"
    }
}

all.dependsOn("assemble")
run.dependsOn("all")
clean.dependsOn("removeDist")
